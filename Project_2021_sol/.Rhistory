knitr::opts_chunk$set(echo = TRUE)
#Attach the necessary libraries
library(dplyr)
library(readr)
#1. Capture the raw pat of the zip folder
raw_path <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movies.zip"
#2. unzip the folder
data <- unzip(raw_path, files = NULL, list = F, exdir = "movie_unzip")
#3. Capture the new path to the folder that contains the datasets
path_ <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movie_unzip"
#4. Create a function to merge all the datasets
merge_df = function(path_to_folder){
#capture the names of the files in the folder
list_name_file = list.files(path = path_to_folder, full.names = T)
#read all the files in the folder
data_list = lapply(list_name_file, function(x){
read.csv(file = x, header = TRUE)
}) #x --> names of the files to read (in this case 'list_name_file')
#combine the datasets with the reduce function
#after merging them two by two (merge function)
Reduce(function(x, y){merge(x, y, all = T)}, data_list)
}
#5. Store the complete merged dataset
complete_data <- merge_df(path_)
names(complete_data)
library(tidyverse)
complete_data %>%
summarise_all(funs(sum(is.na(.))))
library(tidyverse)
complete_data %>%
summarise_all(funs(sum(is.na(.))))
library(tidyverse)
complete_data %>%
summarise_all(funs(sum(is.na(.)))) %>%
wide
library(tidyverse)
library(tidyr)
complete_data %>%
summarise_all(funs(sum(is.na(.)))) %>%
wide
install.packages("reshape2")
library(reshape2)
long <- melt(wide, id.vars = names(complete_data))
library(reshape2)
long <- melt(complete_data, id.vars = names(complete_data))
library(reshape2)
long <- melt(complete_data, id.vars = names(complete_data))
long
library(reshape2)
long <- melt(complete_data %>%
summarise_all(funs(sum(is.na(.)))), id.vars = names(complete_data))
long
complete_data %>%
summarise_all() %>%
funs() %>%
sum() %>%
is.na(.)
complete_data %>%
summarise_all() %>%
funs() %>%
sum() %>%
is.na()
library(tidyverse)
library(tidyr)
complete_data %>%
summarise_all(funs(sum(is.na(.))))
complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
na_num
print(na_num)
na_num[1]
na_num[2]
na_num[1]
na_num[2]
print(na_num[1])
print(na_num[2])
print.table(na_num)
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num)
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num,justify = T)
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num,justify = TRUE)
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num,justify = 'center')
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num,justify = 'centre')
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num)
knitr::opts_chunk$set(echo = TRUE)
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num)
knitr::opts_chunk$set(echo = TRUE)
#Attach the necessary libraries
library(dplyr)
library(readr)
#1. Capture the raw pat of the zip folder
raw_path <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movies.zip"
#2. unzip the folder
data <- unzip(raw_path, files = NULL, list = F, exdir = "movie_unzip")
#3. Capture the new path to the folder that contains the datasets
path_ <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movie_unzip"
#4. Create a function to merge all the datasets
merge_df = function(path_to_folder){
#capture the names of the files in the folder
list_name_file = list.files(path = path_to_folder, full.names = T)
#read all the files in the folder
data_list = lapply(list_name_file, function(x){
read.csv(file = x, header = TRUE)
}) #x --> names of the files to read (in this case 'list_name_file')
#combine the datasets with the reduce function
#after merging them two by two (merge function)
Reduce(function(x, y){merge(x, y, all = T)}, data_list)
}
#5. Store the complete merged dataset
complete_data <- merge_df(path_)
# summary(complete_data)
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
#Attach the necessary libraries
library(dplyr)
library(readr)
#1. Capture the raw pat of the zip folder
raw_path <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movies.zip"
#2. unzip the folder
data <- unzip(raw_path, files = NULL, list = F, exdir = "movie_unzip")
#3. Capture the new path to the folder that contains the datasets
path_ <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movie_unzip"
#4. Create a function to merge all the datasets
merge_df = function(path_to_folder){
#capture the names of the files in the folder
list_name_file = list.files(path = path_to_folder, full.names = T)
#read all the files in the folder
data_list = lapply(list_name_file, function(x){
read.csv(file = x, header = TRUE)
}) #x --> names of the files to read (in this case 'list_name_file')
#combine the datasets with the reduce function
#after merging them two by two (merge function)
Reduce(function(x, y){merge(x, y, all = T)}, data_list)
}
#5. Store the complete merged dataset
complete_data <- merge_df(path_)
knitr::opts_chunk$set(echo = TRUE)
#Attach the necessary libraries
library(dplyr)
library(readr)
#1. Capture the raw pat of the zip folder
raw_path <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movies.zip"
#2. unzip the folder
data <- unzip(raw_path, files = NULL, list = F, exdir = "movie_unzip")
#3. Capture the new path to the folder that contains the datasets
path_ <- "C:/Users/bsully/OneDrive - Université Paris 1 Panthéon-Sorbonne/Bureau/Project_2021_sol/movie_unzip"
#4. Create a function to merge all the datasets
merge_df = function(path_to_folder){
#capture the names of the files in the folder
list_name_file = list.files(path = path_to_folder, full.names = T)
#read all the files in the folder
data_list = lapply(list_name_file, function(x){
read.csv(file = x, header = TRUE)
}) #x --> names of the files to read (in this case 'list_name_file')
#combine the datasets with the reduce function
#after merging them two by two (merge function)
Reduce(function(x, y){merge(x, y, all = T)}, data_list)
}
#5. Store the complete merged dataset
complete_data <- merge_df(path_)
# summary(complete_data)
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num)
print.table(na_num)
names(complete_data)
if (!require("DT")) install.packages('DT')
if (!require("DT")) install.packages('DT')
library(DT)
datatable(iris)
library(DT)
datatable(na_num)
# print.table(na_num)
print.table(na_num)
na_sum
na_sum
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num)
na_sum
na_num
na_num %>%
filter() %>%
na_num > 0
na_num %>%
filter(a_num>0)
filter(na_num, na_num >0)
filter(na_num, names(na_num) >0)
na_num %>%
filter_all(any_vars(. > 0))
sapply(na_num, function(x) {
sum(x > 0)})
sapply(na_num, function(x) {
x = 0})
sapply(na_num, function(x) {
x != 0})
filter_all(sapply(na_num, function(x) {
x != 0}))
filter_all(sapply(na_num, function(x) {
x != 0}))
na_num[,!sapply(na_num, function(x) mean(x)>0)]
na_num[,!sapply(na_num, function(x) x>0)]
na_num[,!sapply(na_num, function(x) count(x)>0)]
na_num[,!sapply(na_num, function(x) count(x)>0)]
na_num <- complete_data %>% summarise_all(funs(sum(is.na(.))))
print.table(na_num)
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
print.table(na_num)
count(is.na(complete_data))
sum(is.na(complete_data))
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_percent <- na_num/sum(is.na(complete_data))
print.table(na_num)
print.table(na_percent)
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_percent <- na_num/sum(is.na(complete_data))
print.table(na_num)
p = scales::percent(na_percent)
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_percent <- na_num/sum(is.na(complete_data))
print.table(na_num)
p = scales::percent(na_num)
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_percent <- na_num/sum(is.na(complete_data) * 100)
print.table(na_num)
print.table(p)
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_percent <- na_num/sum(is.na(complete_data) * 100)
print.table(na_num)
print.table(na_percent)
print.table(na_percent !0)
na_num <- complete_data %>%
summarise_all(funs(sum(is.na(.))))
na_percent <- na_num/sum(is.na(complete_data) * 100)
print.table(na_num)
print.table(na_percent !0)
print.table(na_percent != 0)
print.table(na_percent > 0)
print.table(na_percent)
scales::percent(na_percent)
mutate(scales::percent(na_percent))
